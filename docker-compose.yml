version: '3.8'

# Services
services:

    #Nginx Service
    nginx:
        build:
            context: .
            dockerfile: docker/nginx.Dockerfile
            args:
                UID: ${XUID} #UID is a read-only variable in bash (reserved variable)
                GID: ${XGID}
        container_name: ${APP_NAME:?err}-nginx
        #user: "${XUID}:${XGID}"
        ports:
            - '8080:80'
            - '443:443'
        volumes:
            - type: bind
              source: src/
              target: /var/www/html
            - type: bind
              source: configurations/nginx/sites-available
              target: /etc/nginx/sites-available
            - type: bind
              source: logs/nginx/
              target: /var/log/nginx/
            - 'php-socket:/var/run/php-fpm'
        networks:
            - custom-network
        depends_on:
            - php

    #Php-fpm service
    php:
        build:
            context: .
            dockerfile: docker/php.Dockerfile
            args:
                UID: ${XUID} #UID is a read-only variable in bash (reserved variable)
                GID: ${XGID}
        container_name: ${APP_NAME:?err}-php
        ports:
            - '9000:9000'
        env_file:
            - '.env'
        volumes:
            - type: bind
              source: src/
              target: /var/www/html
            - '/var/www/html/vendor/'
            - type: bind
              source: logs/php/
              target: /var/log/php/
            - 'php-socket:/run/php-fpm'
        networks:
            - custom-network
        depends_on:
            mysql:
                condition: service_healthy

    #Mysql service
    mysql:
        build:
            context: .
            dockerfile: docker/mysql.Dockerfile
            args:
                UID: ${XUID} #UID is a read-only variable in bash (reserved variable)
                GID: ${XGID}
        #command: mysqld --init-file="/docker-entrypoint-initdb.d/init.sql"
        container_name: ${APP_NAME:?err}-mysql 
        restart: on-failure
        ports:
            - '3306:3306'
        env_file:
            - '.env'
        volumes:
            - type: bind
              source: logs/mysql/
              target: /var/log/mysql/
            - "./docker/initScripts/:/docker-entrypoint-initdb.d/"
            - 'mysql-data:/var/lib/mysql'
        networks:
            - custom-network
        healthcheck:
            test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
            interval: 5s
            retries: 10

#Volumes
volumes:
    mysql-data:
    php-socket:

#Networks  
networks:
    custom-network:
